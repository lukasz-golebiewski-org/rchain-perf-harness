workspace:
  base: /workdir
  path: rchain-perf-harness

clone:
  clone-rchain-perf-harness:
    image: plugins/git
  clone-rchain:
    image: plugins/git
    commands:
      - git clone $${RCHAIN_REPO:-https://github.com/rchain/rchain.git} /workdir/rchain && cd /workdir/rchain
      - git fetch
      - git checkout dev

pipeline:
  restore-cache:
    image: drillster/drone-volume-cache
    restore: true
    mount:
      - /workdir/.ivy2
    volumes:
      - /tmp/cache:/cache

  setup-when-custom-commit:
    image: lukaszgolebiewski/rchain-builder
    pull: true
    commands:
      - echo $CONTRACT
      - echo $RCHAIN_COMMIT_HASH
      - cd /workdir/rchain
      - git checkout $RCHAIN_COMMIT_HASH
      - sbt -Dsbt.ivy.home=/workdir/.ivy2 ";rholang/bnfc:generate; compile; node/docker:publishLocal"
      - cd -
      - ci/patch-image-with-docker-package.sh coop.rchain/rnode:DRONE-${DRONE_BUILD_NUMBER} rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: deployment
      environment: custom_commit

  setup:
    image: docker
    commands:
      - echo $CONTRACT
      - echo $RNODE_IMAGE_VERSION
      - docker pull rchain/rnode:dev
      - ci/patch-image-with-docker-package.sh rchain/rnode:dev rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: push

  setup-when-custom-contract:
    image: docker
    commands:
      - echo $CONTRACT
      - echo $RNODE_IMAGE_VERSION
      - docker pull rchain/rnode:$RNODE_IMAGE_VERSION
      - ci/patch-image-with-docker-package.sh rchain/rnode:$RNODE_IMAGE_VERSION rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      event: deployment
      environment: custom_contract

  bootstrap:
    image: rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    detach: true
    environment:
    commands:
      - /opt/docker/bin/rnode -c ./drone/config/bootstrap.conf run

  wait-for-bootstrap:
    image: rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    commands:
      - until ci/is-container-log-line-present.sh _step_4 'Making a transition to Running state.'; do echo $?; sleep 5; done
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  validator1:
    image: rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    detach: true
    environment:
    commands:
      - /opt/docker/bin/rnode -c ./drone/config/validator1.conf run

  validator2:
    image: rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    detach: true
    environment:
    commands:
      - /opt/docker/bin/rnode -c ./drone/config/validator2.conf run

  validator3:
    image: rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    detach: true
    environment:
    commands:
      - /opt/docker/bin/rnode -c ./drone/config/validator3.conf run

  validator4:
    image: rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    detach: true
    environment:
    commands:
      - /opt/docker/bin/rnode -c ./drone/config/validator4.conf run

  wait-for-validators:
    image: rchain/rnode:for_drone_${DRONE_BUILD_NUMBER}
    commands:
      - until ci/is-container-log-line-present.sh _step_6 'Making a transition to Running state.'; do echo $?; sleep 5; done
      - until ci/is-container-log-line-present.sh _step_7 'Making a transition to Running state.'; do echo $?; sleep 5; done
      - until ci/is-container-log-line-present.sh _step_8 'Making a transition to Running state.'; do echo $?; sleep 5; done
      - until ci/is-container-log-line-present.sh _step_9 'Making a transition to Running state.'; do echo $?; sleep 5; done
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  gatling:
    image: lukaszgolebiewski/rchain-builder
    environment:
      - RCHAIN_REPO_HASH=${RNODE_IMAGE_VERSION}
    commands:
      - pwd
      - cd templater
      - mkfifo pipe
      - tee sbt.out < pipe &
      - sbt -Dsbt.ivy.home=/workdir/.ivy2 -Drnodes.0=bootstrap:30015 -Drnodes.1=validator1:30015 -Drnodes.2=validator2:30015 -Drnodes.3=validator3:30015 -Drnodes.4=validator4:30015 runner/gatling:test > pipe
      - /bin/bash ../etc/check-build-status.sh
    when:
      event: push

  gatling-custom-contract:
    image: hseeberger/scala-sbt:8u212_1.2.8_2.12.9
    environment:
      - RCHAIN_REPO_HASH=${RNODE_IMAGE_VERSION}
    commands:
      - pwd
      - cd templater
      - echo $CONTRACT
      - mkfifo pipe
      - tee sbt.out < pipe &
      - sbt -Dsbt.ivy.home=/workdir/.ivy2 -Dcontract=$CONTRACT -Drnodes.0=bootstrap:30015 -Drnodes.1=validator1:30015 -Drnodes.2=validator2:30015 -Drnodes.3=validator3:30015 -Drnodes.4=validator4:30015 "runner/gatling:testOnly coop.rchain.perf.DeployProposeSimulation" > pipe
      - /bin/bash ../etc/check-build-status.sh
    when:
      event: deployment
      environment: custom_contract

  gatling-custom-commit:
    image: hseeberger/scala-sbt:8u212_1.2.8_2.12.9
    environment:
      - RCHAIN_REPO_HASH=${RCHAIN_COMMIT_HASH}
    commands:
      - pwd
      - cd templater
      - echo $CONTRACT
      - mkfifo pipe
      - tee sbt.out < pipe &
      - sbt -Dsbt.ivy.home=/workdir/.ivy2 -Dcontract=$CONTRACT -Drnodes.0=bootstrap:30015 -Drnodes.1=validator1:30015 -Drnodes.2=validator2:30015 -Drnodes.3=validator3:30015 -Drnodes.4=validator4:30015 "runner/gatling:testOnly coop.rchain.perf.DeployProposeSimulation" > pipe
      - /bin/bash ../etc/check-build-status.sh
    when:
      event: deployment
      environment: custom_commit

  rebuild-cache:
    image: drillster/drone-volume-cache
    rebuild: true
    mount:
      - /workdir/.ivy2
    volumes:
      - /tmp/cache:/cache

  clean-up-docker-images:
    image: docker
    commands:
      - docker images | awk "\$2 !~ /for_drone_$DRONE_BUILD_NUMBER/ { print }" | awk '$2 ~ /for_drone_[0-9]*/ { print $3 }' | xargs --no-run-if-empty docker rmi --force
      - docker images | awk "\$2 !~ /DRONE-$DRONE_BUILD_NUMBER/ { print }" | awk '$2 ~ /DRONE-[0-9]*/ { print $3 }' | xargs --no-run-if-empty docker rmi --force
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
